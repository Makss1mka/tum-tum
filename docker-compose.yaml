services:
  redis:
    image: redis:7
    container_name: redis_server
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - backend

  postgres:
    image: postgres:17
    container_name: postgres_server
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5431:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - backend

  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    depends_on:
      - redis
      - postgres
    environment:
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_URL: ${DB_URL}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      SESSION_EXPIRATION_TIME: ${SESSION_EXPIRATION_TIME}
      JWT_REFRESH_EXPIRATION_TIME_DAYS: ${JWT_REFRESH_EXPIRATION_TIME_DAYS}
      JWT_ACCESS_EXPIRATION_TIME_MINUTES: ${JWT_ACCESS_EXPIRATION_TIME_MINUTES} 
    ports:
      - "8081:8081"
    networks:
      - backend

  gateway:
    build:
      context: ./gateway
    container_name: gateway
    depends_on:
      - redis
    ports:
      - "8083:8083"
    environment:
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    container_name: zookeeper
    ports:
      - 8089:8089
    environment:
      ZOOKEEPER_CLIENT_PORT: 8089
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:8089
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    depends_on:
      zookeeper:
        condition: service_started
    networks:
      - backend


networks:
  backend:
    driver: bridge
